name: Release

on:
  push:
    branches:
      - "main"

env:
  BUILD_ID: ${{ github.sha }}
  NEXT_PUBLIC_BUILD_ID: ${{ github.sha }}

jobs:
  releases:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ap-northeast-1

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Set current date
        env:
          TZ: "Asia/Tokyo"
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Show current datetime
        run: echo ${{ env.CURRENT_DATE }}

      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.CURRENT_DATE }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.CURRENT_DATE }}
            ${{ runner.os }}-buildx-

      - name: install dependencies
        run: npm ci

      - name: build
        run: npm run build:s

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: set IMAGE_URL
        id: image-url
        run: echo "IMAGE_URL=${{ steps.login-ecr.outputs.registry }}/terraform_example_next_ssr_repo:${{ github.sha }}" >> $GITHUB_ENV

      # - name: Build, tag, and push docker image to Amazon ECR
      #   run: |
      #     docker build -t ${{ env.IMAGE_URL }} --build-arg build_id=${{ github.sha }} .
      #     docker push ${{ env.IMAGE_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.IMAGE_URL }}
          cache-from: type=docker,src=/tmp/.buildx-cache
          cache-to: type=docker,dest=/tmp/.buildx-cache-new,mode=max
          # path: frontend
          context: ./frontend

      - name: deploy to lambda
        run: aws lambda update-function-code --function-name terraformExampleNextSSR --image-uri ${{ env.IMAGE_URL }}

      - name: deploy static to s3
        run: aws s3 cp --recursive --region ap-northeast-1 ./.next/static s3://${{ secrets.S3_BUCKET }}/_next/static

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
